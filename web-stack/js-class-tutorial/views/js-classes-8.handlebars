<h2 class="page-header">Further Study Topics and ECMAScript6</h2>
<p>I'm going to end this tutorial with a few subjects and concepts you can research on your own further. ECMAScript6 is adding a lot of interesting "syntatic sugar" that impacts how you might write classes and call superclass methods, etc., in the future. There are types of inheritance-like behavior and polymorphism that remain to be explored, as well.</p>
<h3>Suggested Topics</h3>
<dl>
<dt>Mixins</dt>
<dd>One object acquires the properties of another by copying the properties (specifically, the hasOwnProperty(someProp)==true properties). Typically a shallow copy so objects will only be references, not deep copies, in the receiving object.</dd>

<dt>Scope-Safe Constructors</dt>
<dd>Conditional handling in a constructor - say, MyType - that checks if it was called with 'new' or not by checking if (this instanceof MyType). If not, you can typically use else clause to just recurisvely call MyType with the new keyword. There are other usecases for this kind of logic as well.</dd>

<dt>ECMAScript 6</dt>
<dd>ES6 has added a lot of syntatic sugar to support some behavior that we explored in this tutorial. There are guides that review ES6 online such as <a href="https://github.com/lukehoban/es6features">this one from Luke Hoban</a>. I forego explaining their use here as the sugar takes away a lot of our learning here, and other resources cover it succinctly (because it's quite decent at abstracting away)</dd>
</dl>

<p>The best way to get comfortable with these concepts is to practice. Take some simple class-based designs you've worked with before and try applying the techniques here; go play with EC6 <code>class</code> functionality. Write toy scripts and run them using node.js. And have fun!</p>
